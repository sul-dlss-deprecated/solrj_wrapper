= SolrjWrapper

{<img src="https://travis-ci.org/sul-dlss/solrj_wrapper.svg" alt="Build Status" />}[https://travis-ci.org/sul-dlss/solrj_wrapper] {<img src="https://coveralls.io/repos/sul-dlss/solrj_wrapper/badge.png?branch=master" alt="Coverage Status" />}[https://coveralls.io/r/sul-dlss/solrj_wrapper?branch=master] {<img src="https://gemnasium.com/sul-dlss/solrj_wrapper.png" alt="Dependency Status" />}[https://gemnasium.com/sul-dlss/solrj_wrapper] {<img src="https://badge.fury.io/rb/solrj_wrapper.svg" alt="Gem Version" />}[http://badge.fury.io/rb/solrj_wrapper]


Ruby wrapper for interacting with Solrj objects, such as org.apache.solr.client.solrj.impl.StreamingUpdateSolrServer.

== Installation

Add this line to your application's Gemfile:

    gem 'solrj_wrapper'

And then execute:

    $ bundle

Or install it yourself as:

    $ gem install solrj_wrapper

== Usage

This gem must be run under JRuby, and also requires a directory containing Solrj jar files and solr url (see config/settings.yml)

Here are some examples of use cribbed from the specs:

	sjw = SolrjWrapper.new(solrj_jar_dir, solr_url, solrj_queue_size, solrj_num_threads)
  sjw.get_query_result_docs(q).should be_an_instance_of(Java::OrgApacheSolrCommon::SolrDocumentList)
  sjw.query_server.should be_an_instance_of(Java::OrgApacheSolrClientSolrjImpl::HttpSolrServer)
  sid = Java::OrgApacheSolrCommon::SolrInputDocument.new
  sjw.add_vals_to_fld(sid, "single", ["val"])


== Contributing

See also the wiki page for committers:  https://github.com/sul-dlss/solrj_wrapper/wiki/For-Committers

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Added some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create new Pull Request
